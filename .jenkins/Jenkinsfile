pipeline {
    agent any
    environment {
        GC_PSW = credentials('github-token')
        GIT_REPO = 'project'
        GIT_USERNAME = 'SEOMW'
    }
    triggers {
        githubPush()
    }
    stages {
        stage('Docker Image Build & Push') {
            steps {
                script {
                    // 이전 버전 읽기
                    def current_version = readFile('version.txt').trim() as Integer
                    
                    // 새로운 버전 계산
                    def new_version = current_version + 1
                    
                    // 버전 파일 업데이트
                    writeFile file: 'version.txt', text: new_version.toString()
                    
                    // Docker 이미지 빌드 및 푸시
                    docker.withRegistry('https://index.docker.io/v1/', 'project-docker-token') {
                        def img = docker.build("seomw/${GIT_REPO}", '.')
                        img.push('latest')
                        img.push(new_version.toString())
                    }
                }
            }
        }
        stage('GitHub Release') {
            steps {
                script {
                    def response = sh(script: """
                        curl -sSL \
                          -X POST \
                          -H 'Accept: application/vnd.github+json' \
                          -H 'Authorization: Bearer ${GC_PSW}' \
                          -H 'X-GitHub-Api-Version: 2022-11-28' \
                          https://api.github.com/repos/${GIT_USERNAME}/${GIT_REPO}/releases \
                          -d '{
                                  "tag_name":"v${new_version.toString()}",
                                  "target_commitish":"main",
                                  "name":"Release v${new_version.toString()}",
                                  "body":"Description of the release",
                                  "draft":false,
                                  "prerelease":false,
                                  "generate_release_notes":false
                              }'
                    """, returnStdout: true)
                    
                    sh "echo '$response'"
                }
            }
        }
    }
}
